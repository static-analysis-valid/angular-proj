


name: COPY LINT PR

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop, release/* ]

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    
    steps:
        # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        
        
      # TODO: Don't want to run Node Setup if no modified files (e.g. ts, scss,..) 
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          
      - name: Install dependency
        run: npm ci     
        
      # 3rd party lib 
      # get changed files from PR
      # returns added, modified & removed files 
      - name: Get file changes
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.3 # https://github.com/marketplace/actions/file-changes-action
        with:
          output: ' ' # output as a text 
          
      - name: Echo file changes
        id: hello
        run: |
              echo Added files: ${{ steps.get_file_changes.outputs.files_added }}
              echo Changed files: ${{ steps.get_file_changes.outputs.files_modified }} 
              echo Removed files: ${{ steps.get_file_changes.outputs.files_removed }} 
      
      - name: find files
        run: |
          FILES=(${{ steps.get_file_changes.outputs.files_added }} ${{ steps.get_file_changes.outputs.files_modified }})
          echo "TSFILES=(file1.ts file2.ts)" >> $GITHUB_ENV
          #echo "TSFILES=$(printf -- ‘%s\n’ \"${FILES[@]}\" | grep \.ts$ | tr '\n' ' ')"  >> $GITHUB_ENV
    
      - name: list variable
        run: |
          echo $TSFILES



      
      # Run TS linter on changed files using the settings configured in the 
      - name: TSLint Checking
        # check if added or modified files 
        # how to store changed TS files in a variable? e.g. # TSchanges = (steps.get_file_changes.outputs.files_added || steps.get_file_changes.outputs.files_modified) | grep .ts$ | xargs         
        if: ${{ always() && (steps.get_file_changes.outputs.files_added || steps.get_file_changes.outputs.files_modified) }}
        
        # run linter on changed ts files 
        # tslint -p ./tslint.json [file.ts ...]
        run: $(git rev-parse --show-toplevel)/node_modules/.bin/tslint -p $(git rev-parse --show-toplevel) ${{ steps.get_file_changes.outputs.files_added }} ${{ steps.get_file_changes.outputs.files_modified }}
        # How to store project root in a variable? e.g. var ROOT = $(git rev-parse --show-toplevel)
    





