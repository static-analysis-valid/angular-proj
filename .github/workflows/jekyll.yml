name: Test PR

on:
  push:
    branches: [ main,  ]
  pull_request:
    branches: [ main, release/* ]

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    
    # Map a step output to a job output
    outputs:
      all: ${{ steps.changes.outputs.all}}
      ts: ${{ steps.changes.outputs.ts }}

    steps:
        # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
          
      - name: Install dependency
        run: npm ci     
        
      - name: Get file changes
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ' '
          
      - name: Echo file changes
        id: hello
        run: |
              echo Added files: ${{ steps.get_file_changes.outputs.files_added }}
              echo Changed files: ${{ steps.get_file_changes.outputs.files_modified }}
              echo Removed files: ${{ steps.get_file_changes.outputs.files_removed }}
      
      - name: TSLint Checking
        if: ${{ always() && (steps.get_file_changes.outputs.files_added || steps.get_file_changes.outputs.files_modified) }}
        run: npm tslint --config ./tslint.json -e "**/*.(js|jsx|css|scss|html|md|json|yml)" ${{ steps.get_file_changes.outputs.files_added }} ${{ steps.get_file_changes.outputs.files_modified }}



        
        
        
        
      #- name: Run linter plugin
      #   run: npm run lint         # TODO: run lint on changed files         
     

        
        # uses: wearerequired/lint-action@v1
        # with:
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          # Enable linters
          # eslint: true
          # Optional: scan TS
          # eslint_extensions: js,ts
          # TODO: support rules from tslint
      
      
    
  

 

